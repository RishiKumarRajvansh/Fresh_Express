# Generated by Django 5.2.5 on 2025-09-01 09:41

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('orders', '0004_remove_order_package_qr_code_order_handover_code'),
        ('payments', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PaymentGateway',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=50)),
                ('gateway_type', models.CharField(choices=[('stripe', 'Stripe'), ('razorpay', 'Razorpay'), ('paytm', 'Paytm'), ('phonepe', 'PhonePe'), ('googlepay', 'Google Pay'), ('payu', 'PayU'), ('cashfree', 'Cashfree'), ('instamojo', 'Instamojo')], max_length=20)),
                ('api_key', models.CharField(help_text='Public/API Key', max_length=500)),
                ('secret_key', models.CharField(help_text='Secret Key', max_length=500)),
                ('merchant_id', models.CharField(blank=True, max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('is_sandbox', models.BooleanField(default=True)),
                ('supports_recurring', models.BooleanField(default=False)),
                ('supports_refunds', models.BooleanField(default=True)),
                ('supports_webhooks', models.BooleanField(default=True)),
                ('min_amount', models.DecimalField(decimal_places=2, default=1.0, max_digits=10)),
                ('max_amount', models.DecimalField(decimal_places=2, default=100000.0, max_digits=10)),
                ('fee_fixed', models.DecimalField(decimal_places=2, default=0.0, help_text='Fixed fee per transaction', max_digits=8)),
                ('fee_percentage', models.DecimalField(decimal_places=2, default=0.0, help_text='Percentage fee', max_digits=5)),
                ('supported_currencies', models.JSONField(default=list, help_text='List of supported currency codes')),
                ('supported_countries', models.JSONField(default=list, help_text='List of supported country codes')),
                ('additional_config', models.JSONField(blank=True, default=dict, help_text='Gateway-specific configuration')),
                ('priority', models.PositiveIntegerField(default=10)),
            ],
            options={
                'ordering': ['priority', 'name'],
                'unique_together': {('gateway_type', 'merchant_id')},
            },
        ),
        migrations.CreateModel(
            name='PaymentTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('transaction_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('transaction_type', models.CharField(choices=[('payment', 'Payment'), ('refund', 'Refund'), ('partial_refund', 'Partial Refund'), ('cancellation', 'Cancellation'), ('chargeback', 'Chargeback')], default='payment', max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('success', 'Success'), ('failed', 'Failed'), ('cancelled', 'Cancelled'), ('refunded', 'Refunded'), ('partially_refunded', 'Partially Refunded')], default='pending', max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('gateway_fee', models.DecimalField(decimal_places=2, default=0.0, max_digits=8)),
                ('net_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('currency', models.CharField(default='INR', max_length=3)),
                ('gateway_transaction_id', models.CharField(blank=True, max_length=200)),
                ('gateway_response', models.JSONField(default=dict)),
                ('initiated_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('retry_count', models.PositiveIntegerField(default=0)),
                ('max_retries', models.PositiveIntegerField(default=3)),
                ('metadata', models.JSONField(default=dict)),
                ('notes', models.TextField(blank=True)),
                ('gateway', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='payments.paymentgateway')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='orders.order')),
                ('payment_method', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='payments.paymentmethod')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-initiated_at'],
            },
        ),
        migrations.CreateModel(
            name='PaymentWebhook',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('webhook_id', models.CharField(max_length=200)),
                ('event_type', models.CharField(max_length=100)),
                ('raw_data', models.JSONField()),
                ('headers', models.JSONField(default=dict)),
                ('is_processed', models.BooleanField(default=False)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('processing_error', models.TextField(blank=True)),
                ('retry_count', models.PositiveIntegerField(default=0)),
                ('gateway', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='payments.paymentgateway')),
                ('transaction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='webhooks', to='payments.paymenttransaction')),
            ],
        ),
        migrations.CreateModel(
            name='PaymentAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('date', models.DateField()),
                ('total_transactions', models.PositiveIntegerField(default=0)),
                ('successful_transactions', models.PositiveIntegerField(default=0)),
                ('failed_transactions', models.PositiveIntegerField(default=0)),
                ('total_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('successful_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('total_fees', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('success_rate', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('average_transaction_value', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('card_transactions', models.PositiveIntegerField(default=0)),
                ('upi_transactions', models.PositiveIntegerField(default=0)),
                ('wallet_transactions', models.PositiveIntegerField(default=0)),
                ('netbanking_transactions', models.PositiveIntegerField(default=0)),
                ('cod_transactions', models.PositiveIntegerField(default=0)),
                ('gateway', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='payments.paymentgateway')),
            ],
            options={
                'ordering': ['-date', 'gateway'],
                'unique_together': {('date', 'gateway')},
            },
        ),
        migrations.AddIndex(
            model_name='paymenttransaction',
            index=models.Index(fields=['user', 'status'], name='payments_pa_user_id_92d873_idx'),
        ),
        migrations.AddIndex(
            model_name='paymenttransaction',
            index=models.Index(fields=['order', 'status'], name='payments_pa_order_i_ed562a_idx'),
        ),
        migrations.AddIndex(
            model_name='paymenttransaction',
            index=models.Index(fields=['gateway_transaction_id'], name='payments_pa_gateway_d79ddc_idx'),
        ),
        migrations.AddIndex(
            model_name='paymenttransaction',
            index=models.Index(fields=['status', 'initiated_at'], name='payments_pa_status_531425_idx'),
        ),
        migrations.AddIndex(
            model_name='paymentwebhook',
            index=models.Index(fields=['gateway', 'is_processed'], name='payments_pa_gateway_5db2f1_idx'),
        ),
        migrations.AddIndex(
            model_name='paymentwebhook',
            index=models.Index(fields=['event_type', 'created_at'], name='payments_pa_event_t_8ac7c5_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='paymentwebhook',
            unique_together={('gateway', 'webhook_id')},
        ),
    ]
